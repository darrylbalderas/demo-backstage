# Notice the v1beta3 version
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
# some metadata about the template itself
metadata:
  name: v1beta3-demo
  title: Test Action template
  description: scaffolder v1beta3 template demo
spec:
  owner: backstage/techdocs-core
  type: service
  # these are the steps which are rendered in the frontend with the form input
  parameters:
    - title: Custom
      properties:
        custom:
          type: string
          # Use `SelectFieldFromApi` to configure the select field for the entry.
          ui:field: SelectFieldFromApi
          ui:options:
            title: My Dropdown title
            description: My custom description for the component
            # The Path on the Backstage API and the parameters to fetch the data for the dropdown
            path: 'catalog/entity-facets'
            params:
              facet: 'kind'

            # (Optional) Renders the provided text as a placeholder value into the select box.
            placeholder: 'Select from options'

            # This selects the array element from the API fetch response. It finds the array with the name kind
            # under the facets object
            arraySelector: 'facets.kind'

            # (Optional) This selects the field in the array to use for the value of each select item. If its not specified
            # it will use the value of the item directly.
            valueSelector: 'value'

    # - title: Fill in some steps
    #   required:
    #     - name
    #   properties:
    #     name:
    #       title: Name
    #       type: string
    #       description: Unique name of the component
    #       ui:autofocus: true
    #       ui:options:
    #         rows: 5
    #     owner:
    #       title: Owner
    #       type: string
    #       description: Owner of the component
    #       ui:field: OwnerPicker
    #       ui:options:
    #         catalogFilter:
    #           kind: Group
    # - title: Choose a location
    #   required:
    #     - repoUrl
    #   properties:
    #     repoUrl:
    #       title: Repository Location
    #       type: string
    #       ui:field: RepoUrlPicker
    #       ui:options:
    #         allowedHosts:
    #           - github.com

  # here's the steps that are executed in series in the scaffolder backend
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./template
        values:
          name: ${{ parameters.name }}
          owner: ${{ parameters.owner }}

    - id: fetch-docs
      name: Fetch Docs
      action: fetch:plain
      input:
        targetPath: ./community
        url: https://github.com/backstage/community/tree/main/backstage-community-sessions

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  # some outputs which are saved along with the job for use in the frontend
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
